apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: example-role
  namespace: example-namespace
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
    verbs:
      - list
      - watch

# Role Binding for ServiceAccount 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: example-rolebinding
  namespace: example-namespace
subjects:
  - kind: ServiceAccount
    name: example-sa
    namespace: example-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: example-role

# Role with Full Access to Pods
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-admin
  namespace: dev-namespace
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete

# Role for configMap reader
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: configmap-reader
  namespace: staging
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list

# Role with Secrets access
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: production
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list

# Role with Namespace-wide Access
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: namespace-admin
  namespace: dev-namespace
rules:
  - apiGroups:
      - ""
    resources:
      - "*"
    verbs:
      - "*"

# Read-Only Role for Deployments
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deployment-reader
  namespace: apps
rules:
  - apiGroups:
      - "apps"
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
---

